if exists (select * from tempdb.sys.all_objects where name like '%#dbsize%') 
drop table #dbsize 
create table #dbsize 
(Dbname sysname,dbstatus varchar(50),Recovery_Model varchar(40) default ('NA'), file_Size_MB decimal(30,2)default (0),Space_Used_MB decimal(30,2)default (0),Free_Space_MB decimal(30,2) default (0)) 
go 
  
insert into #dbsize(Dbname,dbstatus,Recovery_Model,file_Size_MB,Space_Used_MB,Free_Space_MB) 
exec sp_msforeachdb 
'use [?]; 
  select DB_NAME() AS DbName, 
    CONVERT(varchar(20),DatabasePropertyEx(''?'',''Status'')) ,  
    CONVERT(varchar(20),DatabasePropertyEx(''?'',''Recovery'')),  
sum(size)/128.0 AS File_Size_MB, 
sum(CAST(FILEPROPERTY(name, ''SpaceUsed'') AS INT))/128.0 as Space_Used_MB, 
SUM( size)/128.0 - sum(CAST(FILEPROPERTY(name,''SpaceUsed'') AS INT))/128.0 AS Free_Space_MB  
from sys.database_files  where type=0 group by type' 
  

  select * from #dbsize

++++++++++++++++++++++++++++
log Size
+++++++++++++++++++
  if exists (select * from tempdb.sys.all_objects where name like '#logsize%') 
drop table #logsize 
create table #logsize 
(Dbname sysname, Log_File_Size_MB decimal(38,2)default (0),log_Space_Used_MB decimal(30,2)default (0),log_Free_Space_MB decimal(30,2)default (0)) 
go 
  
insert into #logsize(Dbname,Log_File_Size_MB,log_Space_Used_MB,log_Free_Space_MB) 
exec sp_msforeachdb 
'use [?]; 
  select DB_NAME() AS DbName, 
sum(size)/128.0 AS Log_File_Size_MB, 
sum(CAST(FILEPROPERTY(name, ''SpaceUsed'') AS INT))/128.0 as log_Space_Used_MB, 
SUM( size)/128.0 - sum(CAST(FILEPROPERTY(name,''SpaceUsed'') AS INT))/128.0 AS log_Free_Space_MB  
from sys.database_files  where type=1 group by type' 
  
  select * from  #logsize

+++++++++++++++++++++++++++++++
Drive Size
+++++++++++++++++++++++++++++

SELECT 
@@servername as servername,
db_name(f.database_id),
volume_mount_point,f.physical_name,
(CAST (size/128 as float)) as dbfile_size_MB,
CAST(total_bytes/1024/1024/1024 AS VARCHAR)  AS DriveSize, 
 CAST(available_bytes/1024/1024/ 1024 AS VARCHAR) AS SpaceAvailable,
(Cast(CAST(available_bytes/1024/1024/ 1024 AS DECIMAL(10, 4))/CAST(total_bytes/1024/1024/1024 AS DECIMAL(10, 4))*100 as int)) as '%free_disk',
Case 
when f.is_percent_growth = 0 Then 'MB'
When f.is_percent_growth = 1 Then '%'
End,
Case
When f.growth = 0 then '0'
When f.growth <> 0 then (Cast(f.growth/128 as VARCHAR)) 
else f.growth 
end AS GROWTH,
Case 
when f.max_size = 0 then 'Restricted'
When f.max_size = -1  then 'Unlimited'
when f.max_size = 268435456 then '2TB'
ELSE (Cast(f.max_size/128 as VARCHAR))
END
--,case when f.max_size <>0 then (Cast(CAST(size/128 AS DECIMAL(10, 4))/CAST((f.max_size)/128 AS DECIMAL(10, 4))*100 as int)) end as '%FREE_FILE'
FROM sys.master_files AS f  
CROSS APPLY sys.dm_os_volume_stats(f.database_id, f.file_id)




